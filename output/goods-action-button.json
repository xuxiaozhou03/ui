{
  "wxml": [
    {
      "tag": "van-button",
      "attrs": {
        ":id": "id",
        ":button-id": "buttonId",
        ":lang": "lang",
        ":type": "type",
        ":size": "size",
        ":color": "color",
        ":plain": "plain",
        ":loading": "loading",
        ":disabled": "disabled",
        ":open-type": "openType",
        "custom-class": "{{ utils.bem('goods-action-button', [type, { first: isFirst, last: isLast, plain: plain }])}} van-goods-action-button__inner custom-class",
        ":custom-style": "customStyle",
        ":business-id": "businessId",
        ":session-from": "sessionFrom",
        ":app-parameter": "appParameter",
        ":send-message-img": "sendMessageImg",
        ":send-message-path": "sendMessagePath",
        ":show-message-card": "showMessageCard",
        ":send-message-title": "sendMessageTitle",
        "@click": "onClick",
        "@error": "onError",
        "@contact": "onContact",
        "@opensetting": "onOpenSetting",
        "@getuserinfo": "onGetUserInfo",
        "@agreeprivacyauthorization": "onAgreePrivacyAuthorization",
        "@getRealTimePhoneNumber": "onGetRealTimePhoneNumber",
        "@getphonenumber": "onGetPhoneNumber",
        "@launchapp": "onLaunchApp"
      },
      "children": [
        {
          "tag": "slot"
        }
      ]
    }
  ],
  "ts": {
    "kind": "SourceFile",
    "text": "import { VantComponent } from '../common/component';\nimport { useParent } from '../common/relation';\nimport { button } from '../mixins/button';\nimport { link } from '../mixins/link';\n\nVantComponent({\n  mixins: [link, button],\n\n  relation: useParent('goods-action'),\n\n  props: {\n    text: String,\n    color: String,\n    size: {\n      type: String,\n      value: 'normal',\n    },\n    loading: Boolean,\n    disabled: Boolean,\n    plain: Boolean,\n    type: {\n      type: String,\n      value: 'danger',\n    },\n    customStyle: {\n      type: String,\n      value: '',\n    },\n  },\n\n  methods: {\n    onClick(event: WechatMiniprogram.CustomEvent) {\n      this.$emit('click', event.detail);\n      this.jumpLink();\n    },\n\n    updateStyle() {\n      if (this.parent == null) {\n        return;\n      }\n\n      const { index } = this;\n      const { children = [] } = this.parent;\n\n      this.setData({\n        isFirst: index === 0,\n        isLast: index === children.length - 1,\n      });\n    },\n  },\n});\n",
    "statements": [
      {
        "kind": "ImportDeclaration",
        "text": "import { VantComponent } from '../common/component';"
      },
      {
        "kind": "ImportDeclaration",
        "text": "import { useParent } from '../common/relation';"
      },
      {
        "kind": "ImportDeclaration",
        "text": "import { button } from '../mixins/button';"
      },
      {
        "kind": "ImportDeclaration",
        "text": "import { link } from '../mixins/link';"
      },
      {
        "kind": "ExpressionStatement",
        "text": "VantComponent({\n  mixins: [link, button],\n\n  relation: useParent('goods-action'),\n\n  props: {\n    text: String,\n    color: String,\n    size: {\n      type: String,\n      value: 'normal',\n    },\n    loading: Boolean,\n    disabled: Boolean,\n    plain: Boolean,\n    type: {\n      type: String,\n      value: 'danger',\n    },\n    customStyle: {\n      type: String,\n      value: '',\n    },\n  },\n\n  methods: {\n    onClick(event: WechatMiniprogram.CustomEvent) {\n      this.$emit('click', event.detail);\n      this.jumpLink();\n    },\n\n    updateStyle() {\n      if (this.parent == null) {\n        return;\n      }\n\n      const { index } = this;\n      const { children = [] } = this.parent;\n\n      this.setData({\n        isFirst: index === 0,\n        isLast: index === children.length - 1,\n      });\n    },\n  },\n});",
        "expression": "VantComponent({\n  mixins: [link, button],\n\n  relation: useParent('goods-action'),\n\n  props: {\n    text: String,\n    color: String,\n    size: {\n      type: String,\n      value: 'normal',\n    },\n    loading: Boolean,\n    disabled: Boolean,\n    plain: Boolean,\n    type: {\n      type: String,\n      value: 'danger',\n    },\n    customStyle: {\n      type: String,\n      value: '',\n    },\n  },\n\n  methods: {\n    onClick(event: WechatMiniprogram.CustomEvent) {\n      this.$emit('click', event.detail);\n      this.jumpLink();\n    },\n\n    updateStyle() {\n      if (this.parent == null) {\n        return;\n      }\n\n      const { index } = this;\n      const { children = [] } = this.parent;\n\n      this.setData({\n        isFirst: index === 0,\n        isLast: index === children.length - 1,\n      });\n    },\n  },\n})",
        "callee": "VantComponent",
        "arguments": [
          {
            "mixins": [
              "link",
              "button"
            ],
            "relation": "useParent('goods-action')",
            "props": {
              "text": "String",
              "color": "String",
              "size": {
                "type": "String",
                "value": "normal"
              },
              "loading": "Boolean",
              "disabled": "Boolean",
              "plain": "Boolean",
              "type": {
                "type": "String",
                "value": "danger"
              },
              "customStyle": {
                "type": "String",
                "value": ""
              }
            },
            "methods": {
              "onClick": "onClick(event: WechatMiniprogram.CustomEvent) {\n      this.$emit('click', event.detail);\n      this.jumpLink();\n    }",
              "updateStyle": "updateStyle() {\n      if (this.parent == null) {\n        return;\n      }\n\n      const { index } = this;\n      const { children = [] } = this.parent;\n\n      this.setData({\n        isFirst: index === 0,\n        isLast: index === children.length - 1,\n      });\n    }"
            }
          }
        ]
      }
    ]
  },
  "wxs": null,
  "wxss": ":host{flex:1}.van-goods-action-button{--button-warning-background-color:var(--goods-action-button-warning-color,linear-gradient(to right,#ffd01e,#ff8917));--button-danger-background-color:var(--goods-action-button-danger-color,linear-gradient(to right,#ff6034,#ee0a24));--button-default-height:var(--goods-action-button-height,40px);--button-line-height:var(--goods-action-button-line-height,20px);--button-plain-background-color:var(--goods-action-button-plain-color,#fff);--button-border-width:0;display:block}.van-goods-action-button--first{--button-border-radius:999px 0 0 var(--goods-action-button-border-radius,999px);margin-left:5px}.van-goods-action-button--last{--button-border-radius:0 999px var(--goods-action-button-border-radius,999px) 0;margin-right:5px}.van-goods-action-button--first.van-goods-action-button--last{--button-border-radius:var(--goods-action-button-border-radius,999px)}.van-goods-action-button--plain{--button-border-width:1px}.van-goods-action-button__inner{font-weight:var(--font-weight-bold,500)!important;width:100%}@media (max-width:321px){.van-goods-action-button{font-size:13px}}"
}