{
  "wxml": [
    {
      "tag": "div",
      "attrs": {
        "class": "custom-class {{ utils.bem('cell', [size, { center, required, borderless: !border, clickable: isLink || clickable }]) }}",
        ":hover-class": "cn('van-cell--hover', hoverClass)",
        "hover-stay-time": "70",
        ":style": "customStyle",
        "@tap": "onClick"
      },
      "children": [
        {
          "tag": "van-icon",
          "attrs": {
            "v-if": "icon",
            ":name": "icon",
            "custom-class": "van-cell__left-icon-wrap van-cell__left-icon"
          }
        },
        {
          "tag": "slot",
          "attrs": {
            "v-else": "",
            "name": "icon"
          }
        },
        {
          "tag": "div",
          "attrs": {
            ":style": "titleStyle",
            ":class": "cn('van-cell__title', titleClass)"
          },
          "children": [
            {
              "tag": "template",
              "attrs": {
                "v-if": "title"
              }
            },
            {
              "tag": "slot",
              "attrs": {
                "v-else": "",
                "name": "title"
              }
            },
            {
              "tag": "div",
              "attrs": {
                "v-if": "label || useLabelSlot",
                ":class": "cn('van-cell__label', labelClass)"
              },
              "children": [
                {
                  "tag": "slot",
                  "attrs": {
                    "v-if": "useLabelSlot",
                    "name": "label"
                  }
                },
                {
                  "tag": "template",
                  "attrs": {
                    "v-else-if": "label"
                  }
                }
              ]
            }
          ]
        },
        {
          "tag": "div",
          "attrs": {
            ":class": "cn('van-cell__value', valueClass)"
          },
          "children": [
            {
              "tag": "template",
              "attrs": {
                "v-if": "value || value === 0"
              }
            },
            {
              "tag": "slot",
              "attrs": {
                "v-else": ""
              }
            }
          ]
        },
        {
          "tag": "van-icon",
          "attrs": {
            "v-if": "isLink",
            ":name": "arrowDirection ? 'arrow' + '-' + arrowDirection : 'arrow'",
            ":custom-class": "cn('van-cell__right-icon-wrap van-cell__right-icon', rightIconClass)"
          }
        },
        {
          "tag": "slot",
          "attrs": {
            "v-else": "",
            "name": "right-icon"
          }
        },
        {
          "tag": "slot",
          "attrs": {
            "name": "extra"
          }
        }
      ]
    }
  ],
  "ts": {
    "kind": "SourceFile",
    "text": "import { link } from '../mixins/link';\nimport { VantComponent } from '../common/component';\n\nVantComponent({\n  classes: [\n    'title-class',\n    'label-class',\n    'value-class',\n    'right-icon-class',\n    'hover-class',\n  ],\n\n  mixins: [link],\n\n  props: {\n    title: null,\n    value: null,\n    icon: String,\n    size: String,\n    label: String,\n    center: Boolean,\n    isLink: Boolean,\n    required: Boolean,\n    clickable: Boolean,\n    titleWidth: String,\n    customStyle: String,\n    arrowDirection: String,\n    useLabelSlot: Boolean,\n    border: {\n      type: Boolean,\n      value: true,\n    },\n    titleStyle: String,\n  },\n\n  methods: {\n    onClick(event: WechatMiniprogram.TouchEvent) {\n      this.$emit('click', event.detail);\n      this.jumpLink();\n    },\n  },\n});\n",
    "statements": [
      {
        "kind": "ImportDeclaration",
        "text": "import { link } from '../mixins/link';"
      },
      {
        "kind": "ImportDeclaration",
        "text": "import { VantComponent } from '../common/component';"
      },
      {
        "kind": "ExpressionStatement",
        "text": "VantComponent({\n  classes: [\n    'title-class',\n    'label-class',\n    'value-class',\n    'right-icon-class',\n    'hover-class',\n  ],\n\n  mixins: [link],\n\n  props: {\n    title: null,\n    value: null,\n    icon: String,\n    size: String,\n    label: String,\n    center: Boolean,\n    isLink: Boolean,\n    required: Boolean,\n    clickable: Boolean,\n    titleWidth: String,\n    customStyle: String,\n    arrowDirection: String,\n    useLabelSlot: Boolean,\n    border: {\n      type: Boolean,\n      value: true,\n    },\n    titleStyle: String,\n  },\n\n  methods: {\n    onClick(event: WechatMiniprogram.TouchEvent) {\n      this.$emit('click', event.detail);\n      this.jumpLink();\n    },\n  },\n});",
        "expression": "VantComponent({\n  classes: [\n    'title-class',\n    'label-class',\n    'value-class',\n    'right-icon-class',\n    'hover-class',\n  ],\n\n  mixins: [link],\n\n  props: {\n    title: null,\n    value: null,\n    icon: String,\n    size: String,\n    label: String,\n    center: Boolean,\n    isLink: Boolean,\n    required: Boolean,\n    clickable: Boolean,\n    titleWidth: String,\n    customStyle: String,\n    arrowDirection: String,\n    useLabelSlot: Boolean,\n    border: {\n      type: Boolean,\n      value: true,\n    },\n    titleStyle: String,\n  },\n\n  methods: {\n    onClick(event: WechatMiniprogram.TouchEvent) {\n      this.$emit('click', event.detail);\n      this.jumpLink();\n    },\n  },\n})",
        "callee": "VantComponent",
        "arguments": [
          {
            "classes": [
              "'title-class'",
              "'label-class'",
              "'value-class'",
              "'right-icon-class'",
              "'hover-class'"
            ],
            "mixins": [
              "link"
            ],
            "props": {
              "title": "null",
              "value": "null",
              "icon": "String",
              "size": "String",
              "label": "String",
              "center": "Boolean",
              "isLink": "Boolean",
              "required": "Boolean",
              "clickable": "Boolean",
              "titleWidth": "String",
              "customStyle": "String",
              "arrowDirection": "String",
              "useLabelSlot": "Boolean",
              "border": {
                "type": "Boolean",
                "value": "true"
              },
              "titleStyle": "String"
            },
            "methods": {
              "onClick": "onClick(event: WechatMiniprogram.TouchEvent) {\n      this.$emit('click', event.detail);\n      this.jumpLink();\n    }"
            }
          }
        ]
      }
    ]
  },
  "wxs": {
    "kind": "SourceFile",
    "text": "var style = require('../wxs/style.wxs');\nvar addUnit = require('../wxs/add-unit.wxs');\n\nfunction titleStyle(data) {\n  return style([\n    {\n      'max-width': addUnit(data.titleWidth),\n      'min-width': addUnit(data.titleWidth),\n    },\n    data.titleStyle,\n  ]);\n}\n\nmodule.exports = {\n  titleStyle: titleStyle,\n};\n",
    "statements": [
      {
        "kind": "FirstStatement",
        "text": "var style = require('../wxs/style.wxs');"
      },
      {
        "kind": "FirstStatement",
        "text": "var addUnit = require('../wxs/add-unit.wxs');"
      },
      {
        "kind": "FunctionDeclaration",
        "text": "function titleStyle(data) {\n  return style([\n    {\n      'max-width': addUnit(data.titleWidth),\n      'min-width': addUnit(data.titleWidth),\n    },\n    data.titleStyle,\n  ]);\n}",
        "name": "titleStyle"
      },
      {
        "kind": "ExpressionStatement",
        "text": "module.exports = {\n  titleStyle: titleStyle,\n};",
        "expression": "module.exports = {\n  titleStyle: titleStyle,\n}"
      }
    ]
  },
  "wxss": ".van-cell{background-color:var(--cell-background-color,#fff);box-sizing:border-box;color:var(--cell-text-color,#323233);display:flex;font-size:var(--cell-font-size,14px);line-height:var(--cell-line-height,24px);padding:var(--cell-vertical-padding,10px) var(--cell-horizontal-padding,16px);position:relative;width:100%}.van-cell:after{border-bottom:1px solid #ebedf0;bottom:0;box-sizing:border-box;content:\" \";left:16px;pointer-events:none;position:absolute;right:16px;transform:scaleY(.5);transform-origin:center}.van-cell--borderless:after{display:none}.van-cell-group{background-color:var(--cell-background-color,#fff)}.van-cell__label{color:var(--cell-label-color,#969799);font-size:var(--cell-label-font-size,12px);line-height:var(--cell-label-line-height,18px);margin-top:var(--cell-label-margin-top,3px)}.van-cell__value{color:var(--cell-value-color,#969799);overflow:hidden;text-align:right;vertical-align:middle}.van-cell__title,.van-cell__value{flex:1}.van-cell__title:empty,.van-cell__value:empty{display:none}.van-cell__left-icon-wrap,.van-cell__right-icon-wrap{align-items:center;display:flex;font-size:var(--cell-icon-size,16px);height:var(--cell-line-height,24px)}.van-cell__left-icon-wrap{margin-right:var(--padding-base,4px)}.van-cell__right-icon-wrap{color:var(--cell-right-icon-color,#969799);margin-left:var(--padding-base,4px)}.van-cell__left-icon{vertical-align:middle}.van-cell__left-icon,.van-cell__right-icon{line-height:var(--cell-line-height,24px)}.van-cell--clickable.van-cell--hover{background-color:var(--cell-active-color,#f2f3f5)}.van-cell--required{overflow:visible}.van-cell--required:before{color:var(--cell-required-color,#ee0a24);content:\"*\";font-size:var(--cell-font-size,14px);left:var(--padding-xs,8px);position:absolute}.van-cell--center{align-items:center}.van-cell--large{padding-bottom:var(--cell-large-vertical-padding,12px);padding-top:var(--cell-large-vertical-padding,12px)}.van-cell--large .van-cell__title{font-size:var(--cell-large-title-font-size,16px)}.van-cell--large .van-cell__value{font-size:var(--cell-large-value-font-size,16px)}.van-cell--large .van-cell__label{font-size:var(--cell-large-label-font-size,14px)}"
}