{
  "wxml": [
    {
      "tag": "div",
      "attrs": {
        "v-if": "loading",
        "class": "custom-class {{ utils.bem('skeleton', [{animate}]) }}"
      },
      "children": [
        {
          "tag": "div",
          "attrs": {
            "v-if": "avatar",
            "class": "avatar-class {{ utils.bem('skeleton__avatar', [avatarShape])}}",
            ":style": "'width:' + avatarSize + ';height:' + avatarSize"
          }
        },
        {
          "tag": "div",
          "attrs": {
            ":class": "utils.bem('skeleton__content')"
          },
          "children": [
            {
              "tag": "div",
              "attrs": {
                "v-if": "title",
                "class": "title-class {{ utils.bem('skeleton__title') }}",
                ":style": "'width:' + titleWidth"
              }
            },
            {
              "tag": "div",
              "attrs": {
                "v-for": "rowArray",
                ":key": "index",
                "v-for-index": "index",
                "class": "row-class {{ utils.bem('skeleton__row') }}",
                ":style": "'width:' + (isArray ? rowWidth[index] : rowWidth)"
              }
            }
          ]
        }
      ]
    },
    {
      "tag": "div",
      "attrs": {
        "v-else": "",
        ":class": "utils.bem('skeleton__content')"
      },
      "children": [
        {
          "tag": "slot"
        }
      ]
    }
  ],
  "ts": {
    "kind": "SourceFile",
    "text": "import { VantComponent } from '../common/component';\n\nVantComponent({\n  classes: ['avatar-class', 'title-class', 'row-class'],\n  props: {\n    row: {\n      type: Number,\n      value: 0,\n      observer(value: number) {\n        this.setData({ rowArray: Array.from({ length: value }) });\n      },\n    },\n    title: Boolean,\n    avatar: Boolean,\n    loading: {\n      type: Boolean,\n      value: true,\n    },\n    animate: {\n      type: Boolean,\n      value: true,\n    },\n    avatarSize: {\n      type: String,\n      value: '32px',\n    },\n    avatarShape: {\n      type: String,\n      value: 'round',\n    },\n    titleWidth: {\n      type: String,\n      value: '40%',\n    },\n    rowWidth: {\n      type: null,\n      value: '100%',\n      observer(val) {\n        this.setData({ isArray: val instanceof Array });\n      },\n    },\n  },\n\n  data: {\n    isArray: false,\n    rowArray: [],\n  },\n});\n",
    "statements": [
      {
        "kind": "ImportDeclaration",
        "text": "import { VantComponent } from '../common/component';"
      },
      {
        "kind": "ExpressionStatement",
        "text": "VantComponent({\n  classes: ['avatar-class', 'title-class', 'row-class'],\n  props: {\n    row: {\n      type: Number,\n      value: 0,\n      observer(value: number) {\n        this.setData({ rowArray: Array.from({ length: value }) });\n      },\n    },\n    title: Boolean,\n    avatar: Boolean,\n    loading: {\n      type: Boolean,\n      value: true,\n    },\n    animate: {\n      type: Boolean,\n      value: true,\n    },\n    avatarSize: {\n      type: String,\n      value: '32px',\n    },\n    avatarShape: {\n      type: String,\n      value: 'round',\n    },\n    titleWidth: {\n      type: String,\n      value: '40%',\n    },\n    rowWidth: {\n      type: null,\n      value: '100%',\n      observer(val) {\n        this.setData({ isArray: val instanceof Array });\n      },\n    },\n  },\n\n  data: {\n    isArray: false,\n    rowArray: [],\n  },\n});",
        "expression": "VantComponent({\n  classes: ['avatar-class', 'title-class', 'row-class'],\n  props: {\n    row: {\n      type: Number,\n      value: 0,\n      observer(value: number) {\n        this.setData({ rowArray: Array.from({ length: value }) });\n      },\n    },\n    title: Boolean,\n    avatar: Boolean,\n    loading: {\n      type: Boolean,\n      value: true,\n    },\n    animate: {\n      type: Boolean,\n      value: true,\n    },\n    avatarSize: {\n      type: String,\n      value: '32px',\n    },\n    avatarShape: {\n      type: String,\n      value: 'round',\n    },\n    titleWidth: {\n      type: String,\n      value: '40%',\n    },\n    rowWidth: {\n      type: null,\n      value: '100%',\n      observer(val) {\n        this.setData({ isArray: val instanceof Array });\n      },\n    },\n  },\n\n  data: {\n    isArray: false,\n    rowArray: [],\n  },\n})",
        "callee": "VantComponent",
        "arguments": [
          {
            "classes": [
              "'avatar-class'",
              "'title-class'",
              "'row-class'"
            ],
            "props": {
              "row": {
                "type": "Number",
                "value": "0"
              },
              "title": "Boolean",
              "avatar": "Boolean",
              "loading": {
                "type": "Boolean",
                "value": "true"
              },
              "animate": {
                "type": "Boolean",
                "value": "true"
              },
              "avatarSize": {
                "type": "String",
                "value": "32px"
              },
              "avatarShape": {
                "type": "String",
                "value": "round"
              },
              "titleWidth": {
                "type": "String",
                "value": "40%"
              },
              "rowWidth": {
                "type": "null",
                "value": "100%"
              }
            },
            "data": {
              "isArray": "false",
              "rowArray": []
            }
          }
        ]
      }
    ]
  },
  "wxs": null,
  "wxss": ".van-skeleton{box-sizing:border-box;display:flex;padding:var(--skeleton-padding,0 16px);width:100%}.van-skeleton__avatar{background-color:var(--skeleton-avatar-background-color,#f2f3f5);flex-shrink:0;margin-right:var(--padding-md,16px)}.van-skeleton__avatar--round{border-radius:100%}.van-skeleton__content{flex:1}.van-skeleton__avatar+.van-skeleton__content{padding-top:var(--padding-xs,8px)}.van-skeleton__row,.van-skeleton__title{background-color:var(--skeleton-row-background-color,#f2f3f5);height:var(--skeleton-row-height,16px)}.van-skeleton__title{margin:0}.van-skeleton__row:not(:first-child){margin-top:var(--skeleton-row-margin-top,12px)}.van-skeleton__title+.van-skeleton__row{margin-top:20px}.van-skeleton--animate{animation:van-skeleton-blink 1.2s ease-in-out infinite}@keyframes van-skeleton-blink{50%{opacity:.6}}"
}