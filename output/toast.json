{
  "wxml": [
    {
      "tag": "van-overlay",
      "attrs": {
        "v-if": "mask || forbidClick",
        ":show": "show",
        ":z-index": "zIndex",
        ":custom-style": "mask ? '' : 'background-color: transparent;'"
      }
    },
    {
      "tag": "van-transition",
      "attrs": {
        ":show": "show",
        "custom-style": "z-index: {{ zIndex }}",
        "custom-class": "van-toast__container"
      },
      "children": [
        {
          "tag": "div",
          "attrs": {
            "class": "van-toast van-toast--{{ (type === 'text' || type === 'html') ? 'text' : 'icon' }} van-toast--{{ position }}",
            "@catch:touchmove": "noop"
          },
          "children": [
            {
              "tag": "text",
              "attrs": {
                "v-if": "type === 'text'"
              }
            },
            {
              "tag": "rich-text",
              "attrs": {
                "v-else-if": "type === 'html'",
                ":nodes": "message"
              }
            },
            {
              "tag": "template",
              "attrs": {
                "v-else": ""
              },
              "children": [
                {
                  "tag": "van-loading",
                  "attrs": {
                    "v-if": "type === 'loading'",
                    "color": "white",
                    ":type": "loadingType",
                    "custom-class": "van-toast__loading"
                  }
                },
                {
                  "tag": "van-icon",
                  "attrs": {
                    "v-else": "",
                    "class": "van-toast__icon",
                    ":name": "type"
                  }
                },
                {
                  "tag": "text",
                  "attrs": {
                    "v-if": "message",
                    "class": "van-toast__text"
                  }
                }
              ]
            },
            {
              "tag": "slot"
            }
          ]
        }
      ]
    }
  ],
  "ts": {
    "kind": "SourceFile",
    "text": "import { VantComponent } from '../common/component';\n\nVantComponent({\n  props: {\n    show: Boolean,\n    mask: Boolean,\n    message: String,\n    forbidClick: Boolean,\n    zIndex: {\n      type: Number,\n      value: 1000,\n    },\n    type: {\n      type: String,\n      value: 'text',\n    },\n    loadingType: {\n      type: String,\n      value: 'circular',\n    },\n    position: {\n      type: String,\n      value: 'middle',\n    },\n  },\n\n  methods: {\n    // for prevent touchmove\n    noop() {},\n  },\n});\n",
    "statements": [
      {
        "kind": "ImportDeclaration",
        "text": "import { VantComponent } from '../common/component';"
      },
      {
        "kind": "ExpressionStatement",
        "text": "VantComponent({\n  props: {\n    show: Boolean,\n    mask: Boolean,\n    message: String,\n    forbidClick: Boolean,\n    zIndex: {\n      type: Number,\n      value: 1000,\n    },\n    type: {\n      type: String,\n      value: 'text',\n    },\n    loadingType: {\n      type: String,\n      value: 'circular',\n    },\n    position: {\n      type: String,\n      value: 'middle',\n    },\n  },\n\n  methods: {\n    // for prevent touchmove\n    noop() {},\n  },\n});",
        "expression": "VantComponent({\n  props: {\n    show: Boolean,\n    mask: Boolean,\n    message: String,\n    forbidClick: Boolean,\n    zIndex: {\n      type: Number,\n      value: 1000,\n    },\n    type: {\n      type: String,\n      value: 'text',\n    },\n    loadingType: {\n      type: String,\n      value: 'circular',\n    },\n    position: {\n      type: String,\n      value: 'middle',\n    },\n  },\n\n  methods: {\n    // for prevent touchmove\n    noop() {},\n  },\n})",
        "callee": "VantComponent",
        "arguments": [
          {
            "props": {
              "show": "Boolean",
              "mask": "Boolean",
              "message": "String",
              "forbidClick": "Boolean",
              "zIndex": {
                "type": "Number",
                "value": "1000"
              },
              "type": {
                "type": "String",
                "value": "text"
              },
              "loadingType": {
                "type": "String",
                "value": "circular"
              },
              "position": {
                "type": "String",
                "value": "middle"
              }
            },
            "methods": {
              "noop": "noop() {}"
            }
          }
        ]
      }
    ]
  },
  "wxs": null,
  "wxss": ".van-toast{word-wrap:break-word;align-items:center;background-color:var(--toast-background-color,rgba(0,0,0,.7));border-radius:var(--toast-border-radius,8px);box-sizing:initial;color:var(--toast-text-color,#fff);display:flex;flex-direction:column;font-size:var(--toast-font-size,14px);justify-content:center;line-height:var(--toast-line-height,20px);white-space:pre-wrap}.van-toast__container{left:50%;max-width:var(--toast-max-width,70%);position:fixed;top:50%;transform:translate(-50%,-50%);width:-webkit-fit-content;width:fit-content}.van-toast--text{min-width:var(--toast-text-min-width,96px);padding:var(--toast-text-padding,8px 12px)}.van-toast--icon{min-height:var(--toast-default-min-height,88px);padding:var(--toast-default-padding,16px);width:var(--toast-default-width,88px)}.van-toast--icon .van-toast__icon{font-size:var(--toast-icon-size,36px)}.van-toast--icon .van-toast__text{padding-top:8px}.van-toast__loading{margin:10px 0}.van-toast--top{transform:translateY(-30vh)}.van-toast--bottom{transform:translateY(30vh)}"
}