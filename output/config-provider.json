{
  "wxml": [
    {
      "tag": "div",
      "attrs": {
        "class": "van-config-provider",
        ":style": "mapThemeVarsToCSSVars"
      },
      "children": [
        {
          "tag": "slot"
        }
      ]
    }
  ],
  "ts": {
    "kind": "SourceFile",
    "text": "import { VantComponent } from '../common/component';\n\nVantComponent({\n  props: {\n    themeVars: {\n      type: Object,\n      value: {},\n    },\n  },\n});\n",
    "statements": [
      {
        "kind": "ImportDeclaration",
        "text": "import { VantComponent } from '../common/component';"
      },
      {
        "kind": "ExpressionStatement",
        "text": "VantComponent({\n  props: {\n    themeVars: {\n      type: Object,\n      value: {},\n    },\n  },\n});",
        "expression": "VantComponent({\n  props: {\n    themeVars: {\n      type: Object,\n      value: {},\n    },\n  },\n})",
        "callee": "VantComponent",
        "arguments": [
          {
            "props": {
              "themeVars": {
                "type": "Object",
                "value": {}
              }
            }
          }
        ]
      }
    ]
  },
  "wxs": {
    "kind": "SourceFile",
    "text": "var object = require('../wxs/object.wxs');\nvar style = require('../wxs/style.wxs');\n\nfunction kebabCase(word) {\n  var newWord = word\n    .replace(getRegExp(\"[A-Z]\", 'g'), function (i) {\n      return '-' + i;\n    })\n    .toLowerCase()\n    .replace(getRegExp(\"^-\"), '');\n\n  return newWord;\n}\n\nfunction mapThemeVarsToCSSVars(themeVars) {\n  var cssVars = {};\n  object.keys(themeVars).forEach(function (key) {\n    var cssVarsKey = '--' + kebabCase(key);\n    cssVars[cssVarsKey] = themeVars[key];\n  });\n\n  return style(cssVars);\n}\n\nmodule.exports = {\n  kebabCase: kebabCase,\n  mapThemeVarsToCSSVars: mapThemeVarsToCSSVars,\n};\n",
    "statements": [
      {
        "kind": "FirstStatement",
        "text": "var object = require('../wxs/object.wxs');"
      },
      {
        "kind": "FirstStatement",
        "text": "var style = require('../wxs/style.wxs');"
      },
      {
        "kind": "FunctionDeclaration",
        "text": "function kebabCase(word) {\n  var newWord = word\n    .replace(getRegExp(\"[A-Z]\", 'g'), function (i) {\n      return '-' + i;\n    })\n    .toLowerCase()\n    .replace(getRegExp(\"^-\"), '');\n\n  return newWord;\n}",
        "name": "kebabCase"
      },
      {
        "kind": "FunctionDeclaration",
        "text": "function mapThemeVarsToCSSVars(themeVars) {\n  var cssVars = {};\n  object.keys(themeVars).forEach(function (key) {\n    var cssVarsKey = '--' + kebabCase(key);\n    cssVars[cssVarsKey] = themeVars[key];\n  });\n\n  return style(cssVars);\n}",
        "name": "mapThemeVarsToCSSVars"
      },
      {
        "kind": "ExpressionStatement",
        "text": "module.exports = {\n  kebabCase: kebabCase,\n  mapThemeVarsToCSSVars: mapThemeVarsToCSSVars,\n};",
        "expression": "module.exports = {\n  kebabCase: kebabCase,\n  mapThemeVarsToCSSVars: mapThemeVarsToCSSVars,\n}"
      }
    ]
  },
  "wxss": ""
}