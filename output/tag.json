{
  "wxml": [
    {
      "tag": "div",
      "attrs": {
        "class": "custom-class {{ utils.bem('tag', [type, size, { mark, plain, round }]) }}",
        ":style": "rootStyle"
      },
      "children": [
        {
          "tag": "slot"
        },
        {
          "tag": "van-icon",
          "attrs": {
            "v-if": "closeable",
            "name": "cross",
            "custom-class": "van-tag__close",
            "@click": "onClose"
          }
        }
      ]
    }
  ],
  "ts": {
    "kind": "SourceFile",
    "text": "import { VantComponent } from '../common/component';\n\nVantComponent({\n  props: {\n    size: String,\n    mark: Boolean,\n    color: String,\n    plain: Boolean,\n    round: Boolean,\n    textColor: String,\n    type: {\n      type: String,\n      value: 'default',\n    },\n    closeable: Boolean,\n  },\n\n  methods: {\n    onClose() {\n      this.$emit('close');\n    },\n  },\n});\n",
    "statements": [
      {
        "kind": "ImportDeclaration",
        "text": "import { VantComponent } from '../common/component';"
      },
      {
        "kind": "ExpressionStatement",
        "text": "VantComponent({\n  props: {\n    size: String,\n    mark: Boolean,\n    color: String,\n    plain: Boolean,\n    round: Boolean,\n    textColor: String,\n    type: {\n      type: String,\n      value: 'default',\n    },\n    closeable: Boolean,\n  },\n\n  methods: {\n    onClose() {\n      this.$emit('close');\n    },\n  },\n});",
        "expression": "VantComponent({\n  props: {\n    size: String,\n    mark: Boolean,\n    color: String,\n    plain: Boolean,\n    round: Boolean,\n    textColor: String,\n    type: {\n      type: String,\n      value: 'default',\n    },\n    closeable: Boolean,\n  },\n\n  methods: {\n    onClose() {\n      this.$emit('close');\n    },\n  },\n})",
        "callee": "VantComponent",
        "arguments": [
          {
            "props": {
              "size": "String",
              "mark": "Boolean",
              "color": "String",
              "plain": "Boolean",
              "round": "Boolean",
              "textColor": "String",
              "type": {
                "type": "String",
                "value": "default"
              },
              "closeable": "Boolean"
            },
            "methods": {
              "onClose": "onClose() {\n      this.$emit('close');\n    }"
            }
          }
        ]
      }
    ]
  },
  "wxs": {
    "kind": "SourceFile",
    "text": "var style = require('../wxs/style.wxs');\n\nfunction rootStyle(data) {\n  return style({\n    'background-color': data.plain ? '' : data.color,\n    color: data.textColor || data.plain ? data.textColor || data.color : '',\n  });\n}\n\nmodule.exports = {\n  rootStyle: rootStyle,\n};\n",
    "statements": [
      {
        "kind": "FirstStatement",
        "text": "var style = require('../wxs/style.wxs');"
      },
      {
        "kind": "FunctionDeclaration",
        "text": "function rootStyle(data) {\n  return style({\n    'background-color': data.plain ? '' : data.color,\n    color: data.textColor || data.plain ? data.textColor || data.color : '',\n  });\n}",
        "name": "rootStyle"
      },
      {
        "kind": "ExpressionStatement",
        "text": "module.exports = {\n  rootStyle: rootStyle,\n};",
        "expression": "module.exports = {\n  rootStyle: rootStyle,\n}"
      }
    ]
  },
  "wxss": ".van-tag{align-items:center;border-radius:var(--tag-border-radius,2px);color:var(--tag-text-color,#fff);display:inline-flex;font-size:var(--tag-font-size,12px);line-height:var(--tag-line-height,16px);padding:var(--tag-padding,0 4px);position:relative}.van-tag--default{background-color:var(--tag-default-color,#969799)}.van-tag--default.van-tag--plain{color:var(--tag-default-color,#969799)}.van-tag--danger{background-color:var(--tag-danger-color,#ee0a24)}.van-tag--danger.van-tag--plain{color:var(--tag-danger-color,#ee0a24)}.van-tag--primary{background-color:var(--tag-primary-color,#1989fa)}.van-tag--primary.van-tag--plain{color:var(--tag-primary-color,#1989fa)}.van-tag--success{background-color:var(--tag-success-color,#07c160)}.van-tag--success.van-tag--plain{color:var(--tag-success-color,#07c160)}.van-tag--warning{background-color:var(--tag-warning-color,#ff976a)}.van-tag--warning.van-tag--plain{color:var(--tag-warning-color,#ff976a)}.van-tag--plain{background-color:var(--tag-plain-background-color,#fff)}.van-tag--plain:before{border:1px solid;border-radius:inherit;bottom:0;content:\"\";left:0;pointer-events:none;position:absolute;right:0;top:0}.van-tag--medium{padding:var(--tag-medium-padding,2px 6px)}.van-tag--large{border-radius:var(--tag-large-border-radius,4px);font-size:var(--tag-large-font-size,14px);padding:var(--tag-large-padding,4px 8px)}.van-tag--mark{border-radius:0 var(--tag-round-border-radius,var(--tag-round-border-radius,999px)) var(--tag-round-border-radius,var(--tag-round-border-radius,999px)) 0}.van-tag--mark:after{content:\"\";display:block;width:2px}.van-tag--round{border-radius:var(--tag-round-border-radius,999px)}.van-tag__close{margin-left:2px;min-width:1em}"
}