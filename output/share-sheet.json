{
  "wxml": [
    {
      "tag": "van-popup",
      "attrs": {
        "round": "",
        "class": "van-share-sheet",
        ":show": "show",
        "position": "bottom",
        ":overlay": "overlay",
        ":duration": "duration",
        ":z-index": "zIndex",
        ":overlay-style": "overlayStyle",
        ":close-on-click-overlay": "closeOnClickOverlay",
        ":safe-area-inset-bottom": "safeAreaInsetBottom",
        ":root-portal": "rootPortal",
        "@close": "onClose",
        "@click-overlay": "onClickOverlay"
      },
      "children": [
        {
          "tag": "div",
          "attrs": {
            "class": "van-share-sheet__header"
          },
          "children": [
            {
              "tag": "div",
              "attrs": {
                "class": "van-share-sheet__title"
              },
              "children": [
                {
                  "tag": "slot",
                  "attrs": {
                    "name": "title"
                  }
                }
              ]
            },
            {
              "tag": "div",
              "attrs": {
                "v-if": "title",
                "class": "van-share-sheet__title"
              }
            },
            {
              "tag": "div",
              "attrs": {
                "class": "van-share-sheet__description"
              },
              "children": [
                {
                  "tag": "slot",
                  "attrs": {
                    "name": "description"
                  }
                }
              ]
            },
            {
              "tag": "div",
              "attrs": {
                "v-if": "description",
                "class": "van-share-sheet__description"
              }
            }
          ]
        },
        {
          "tag": "template",
          "attrs": {
            "v-if": "isMulti"
          },
          "children": [
            {
              "tag": "options",
              "attrs": {
                "v-for": "options",
                ":show-border": "index !== 0",
                ":key": "index",
                ":options": "item",
                "@select": "onSelect"
              }
            }
          ]
        },
        {
          "tag": "options",
          "attrs": {
            "v-else": "",
            ":options": "options",
            "@select": "onSelect"
          }
        },
        {
          "tag": "button",
          "attrs": {
            "type": "button",
            "class": "van-share-sheet__cancel",
            "@tap": "onCancel"
          }
        }
      ]
    }
  ],
  "ts": {
    "kind": "SourceFile",
    "text": "import { VantComponent } from '../common/component';\n\nVantComponent({\n  props: {\n    // whether to show popup\n    show: Boolean,\n    // overlay custom style\n    overlayStyle: String,\n    // z-index\n    zIndex: {\n      type: Number,\n      value: 100,\n    },\n    title: String,\n    cancelText: {\n      type: String,\n      value: '取消',\n    },\n    description: String,\n    options: {\n      type: Array,\n      value: [],\n    },\n    overlay: {\n      type: Boolean,\n      value: true,\n    },\n    safeAreaInsetBottom: {\n      type: Boolean,\n      value: true,\n    },\n    closeOnClickOverlay: {\n      type: Boolean,\n      value: true,\n    },\n    duration: {\n      type: null,\n      value: 300,\n    },\n    rootPortal: {\n      type: Boolean,\n      value: false,\n    },\n  },\n\n  methods: {\n    onClickOverlay() {\n      this.$emit('click-overlay');\n    },\n\n    onCancel() {\n      this.onClose();\n      this.$emit('cancel');\n    },\n\n    onSelect(event: WechatMiniprogram.CustomEvent) {\n      this.$emit('select', event.detail);\n    },\n\n    onClose() {\n      this.$emit('close');\n    },\n  },\n});\n",
    "statements": [
      {
        "kind": "ImportDeclaration",
        "text": "import { VantComponent } from '../common/component';"
      },
      {
        "kind": "ExpressionStatement",
        "text": "VantComponent({\n  props: {\n    // whether to show popup\n    show: Boolean,\n    // overlay custom style\n    overlayStyle: String,\n    // z-index\n    zIndex: {\n      type: Number,\n      value: 100,\n    },\n    title: String,\n    cancelText: {\n      type: String,\n      value: '取消',\n    },\n    description: String,\n    options: {\n      type: Array,\n      value: [],\n    },\n    overlay: {\n      type: Boolean,\n      value: true,\n    },\n    safeAreaInsetBottom: {\n      type: Boolean,\n      value: true,\n    },\n    closeOnClickOverlay: {\n      type: Boolean,\n      value: true,\n    },\n    duration: {\n      type: null,\n      value: 300,\n    },\n    rootPortal: {\n      type: Boolean,\n      value: false,\n    },\n  },\n\n  methods: {\n    onClickOverlay() {\n      this.$emit('click-overlay');\n    },\n\n    onCancel() {\n      this.onClose();\n      this.$emit('cancel');\n    },\n\n    onSelect(event: WechatMiniprogram.CustomEvent) {\n      this.$emit('select', event.detail);\n    },\n\n    onClose() {\n      this.$emit('close');\n    },\n  },\n});",
        "expression": "VantComponent({\n  props: {\n    // whether to show popup\n    show: Boolean,\n    // overlay custom style\n    overlayStyle: String,\n    // z-index\n    zIndex: {\n      type: Number,\n      value: 100,\n    },\n    title: String,\n    cancelText: {\n      type: String,\n      value: '取消',\n    },\n    description: String,\n    options: {\n      type: Array,\n      value: [],\n    },\n    overlay: {\n      type: Boolean,\n      value: true,\n    },\n    safeAreaInsetBottom: {\n      type: Boolean,\n      value: true,\n    },\n    closeOnClickOverlay: {\n      type: Boolean,\n      value: true,\n    },\n    duration: {\n      type: null,\n      value: 300,\n    },\n    rootPortal: {\n      type: Boolean,\n      value: false,\n    },\n  },\n\n  methods: {\n    onClickOverlay() {\n      this.$emit('click-overlay');\n    },\n\n    onCancel() {\n      this.onClose();\n      this.$emit('cancel');\n    },\n\n    onSelect(event: WechatMiniprogram.CustomEvent) {\n      this.$emit('select', event.detail);\n    },\n\n    onClose() {\n      this.$emit('close');\n    },\n  },\n})",
        "callee": "VantComponent",
        "arguments": [
          {
            "props": {
              "show": "Boolean",
              "overlayStyle": "String",
              "zIndex": {
                "type": "Number",
                "value": "100"
              },
              "title": "String",
              "cancelText": {
                "type": "String",
                "value": "取消"
              },
              "description": "String",
              "options": {
                "type": "Array",
                "value": []
              },
              "overlay": {
                "type": "Boolean",
                "value": "true"
              },
              "safeAreaInsetBottom": {
                "type": "Boolean",
                "value": "true"
              },
              "closeOnClickOverlay": {
                "type": "Boolean",
                "value": "true"
              },
              "duration": {
                "type": "null",
                "value": "300"
              },
              "rootPortal": {
                "type": "Boolean",
                "value": "false"
              }
            },
            "methods": {
              "onClickOverlay": "onClickOverlay() {\n      this.$emit('click-overlay');\n    }",
              "onCancel": "onCancel() {\n      this.onClose();\n      this.$emit('cancel');\n    }",
              "onSelect": "onSelect(event: WechatMiniprogram.CustomEvent) {\n      this.$emit('select', event.detail);\n    }",
              "onClose": "onClose() {\n      this.$emit('close');\n    }"
            }
          }
        ]
      }
    ]
  },
  "wxs": {
    "kind": "SourceFile",
    "text": "function isMulti(options) {\n  if (options == null || options[0] == null) {\n    return false;\n  }\n\n  return \"Array\" === options.constructor && \"Array\" === options[0].constructor;\n}\n\nmodule.exports = {\n  isMulti: isMulti\n};\n",
    "statements": [
      {
        "kind": "FunctionDeclaration",
        "text": "function isMulti(options) {\n  if (options == null || options[0] == null) {\n    return false;\n  }\n\n  return \"Array\" === options.constructor && \"Array\" === options[0].constructor;\n}",
        "name": "isMulti"
      },
      {
        "kind": "ExpressionStatement",
        "text": "module.exports = {\n  isMulti: isMulti\n};",
        "expression": "module.exports = {\n  isMulti: isMulti\n}"
      }
    ]
  },
  "wxss": ".van-share-sheet__header{padding:12px 16px 4px;text-align:center}.van-share-sheet__title{color:#323233;font-size:14px;font-weight:400;line-height:20px;margin-top:8px}.van-share-sheet__title:empty,.van-share-sheet__title:not(:empty)+.van-share-sheet__title{display:none}.van-share-sheet__description{color:#969799;display:block;font-size:12px;line-height:16px;margin-top:8px}.van-share-sheet__description:empty,.van-share-sheet__description:not(:empty)+.van-share-sheet__description{display:none}.van-share-sheet__cancel{background:#fff;border:none;box-sizing:initial;display:block;font-size:16px;height:auto;line-height:48px;padding:0;text-align:center;width:100%}.van-share-sheet__cancel:before{background-color:#f7f8fa;content:\" \";display:block;height:8px}.van-share-sheet__cancel:after{display:none}.van-share-sheet__cancel:active{background-color:#f2f3f5}"
}