{
  "wxml": [
    {
      "tag": "div",
      "attrs": {
        "class": "van-submit-bar custom-class"
      },
      "children": [
        {
          "tag": "slot",
          "attrs": {
            "name": "top"
          }
        },
        {
          "tag": "div",
          "attrs": {
            "class": "van-submit-bar__tip"
          },
          "children": [
            {
              "tag": "van-icon",
              "attrs": {
                "v-if": "tipIcon",
                "size": "12px",
                ":name": "tipIcon",
                "custom-class": "van-submit-bar__tip-icon"
              }
            },
            {
              "tag": "div",
              "attrs": {
                "v-if": "hasTip",
                "class": "van-submit-bar__tip-text"
              }
            },
            {
              "tag": "slot",
              "attrs": {
                "name": "tip"
              }
            }
          ]
        },
        {
          "tag": "div",
          "attrs": {
            "class": "bar-class van-submit-bar__bar"
          },
          "children": [
            {
              "tag": "slot"
            },
            {
              "tag": "div",
              "attrs": {
                "v-if": "hasPrice",
                "class": "van-submit-bar__text"
              },
              "children": [
                {
                  "tag": "text"
                },
                {
                  "tag": "text",
                  "attrs": {
                    "class": "van-submit-bar__price price-class"
                  },
                  "children": [
                    {
                      "tag": "text",
                      "attrs": {
                        "class": "van-submit-bar__currency"
                      }
                    },
                    {
                      "tag": "text",
                      "attrs": {
                        "class": "van-submit-bar__price-integer"
                      }
                    },
                    {
                      "tag": "text"
                    }
                  ]
                },
                {
                  "tag": "text",
                  "attrs": {
                    "class": "van-submit-bar__suffix-label"
                  }
                }
              ]
            },
            {
              "tag": "van-button",
              "attrs": {
                "round": "",
                ":type": "buttonType",
                ":loading": "loading",
                ":disabled": "disabled",
                "custom-class": "van-submit-bar__button button-class",
                "custom-style": "width: 100%;",
                "@click": "onSubmit"
              }
            }
          ]
        },
        {
          "tag": "div",
          "attrs": {
            "v-if": "safeAreaInsetBottom",
            "class": "van-submit-bar__safe"
          }
        }
      ]
    }
  ],
  "ts": {
    "kind": "SourceFile",
    "text": "import { VantComponent } from '../common/component';\n\nVantComponent({\n  classes: ['bar-class', 'price-class', 'button-class'],\n\n  props: {\n    tip: {\n      type: null,\n      observer: 'updateTip',\n    },\n    tipIcon: String,\n    type: Number,\n    price: {\n      type: null,\n      observer: 'updatePrice',\n    },\n    label: String,\n    loading: Boolean,\n    disabled: Boolean,\n    buttonText: String,\n    currency: {\n      type: String,\n      value: '짜',\n    },\n    buttonType: {\n      type: String,\n      value: 'danger',\n    },\n    decimalLength: {\n      type: Number,\n      value: 2,\n      observer: 'updatePrice',\n    },\n    suffixLabel: String,\n    safeAreaInsetBottom: {\n      type: Boolean,\n      value: true,\n    },\n  },\n\n  methods: {\n    updatePrice() {\n      const { price, decimalLength } = this.data;\n      const priceStrArr =\n        typeof price === 'number' &&\n        (price / 100).toFixed(decimalLength).split('.');\n      this.setData({\n        hasPrice: typeof price === 'number',\n        integerStr: priceStrArr && priceStrArr[0],\n        decimalStr: decimalLength && priceStrArr ? `.${priceStrArr[1]}` : '',\n      });\n    },\n\n    updateTip() {\n      this.setData({ hasTip: typeof this.data.tip === 'string' });\n    },\n\n    onSubmit(event: WechatMiniprogram.CustomEvent) {\n      this.$emit('submit', event.detail);\n    },\n  },\n});\n",
    "statements": [
      {
        "kind": "ImportDeclaration",
        "text": "import { VantComponent } from '../common/component';"
      },
      {
        "kind": "ExpressionStatement",
        "text": "VantComponent({\n  classes: ['bar-class', 'price-class', 'button-class'],\n\n  props: {\n    tip: {\n      type: null,\n      observer: 'updateTip',\n    },\n    tipIcon: String,\n    type: Number,\n    price: {\n      type: null,\n      observer: 'updatePrice',\n    },\n    label: String,\n    loading: Boolean,\n    disabled: Boolean,\n    buttonText: String,\n    currency: {\n      type: String,\n      value: '짜',\n    },\n    buttonType: {\n      type: String,\n      value: 'danger',\n    },\n    decimalLength: {\n      type: Number,\n      value: 2,\n      observer: 'updatePrice',\n    },\n    suffixLabel: String,\n    safeAreaInsetBottom: {\n      type: Boolean,\n      value: true,\n    },\n  },\n\n  methods: {\n    updatePrice() {\n      const { price, decimalLength } = this.data;\n      const priceStrArr =\n        typeof price === 'number' &&\n        (price / 100).toFixed(decimalLength).split('.');\n      this.setData({\n        hasPrice: typeof price === 'number',\n        integerStr: priceStrArr && priceStrArr[0],\n        decimalStr: decimalLength && priceStrArr ? `.${priceStrArr[1]}` : '',\n      });\n    },\n\n    updateTip() {\n      this.setData({ hasTip: typeof this.data.tip === 'string' });\n    },\n\n    onSubmit(event: WechatMiniprogram.CustomEvent) {\n      this.$emit('submit', event.detail);\n    },\n  },\n});",
        "expression": "VantComponent({\n  classes: ['bar-class', 'price-class', 'button-class'],\n\n  props: {\n    tip: {\n      type: null,\n      observer: 'updateTip',\n    },\n    tipIcon: String,\n    type: Number,\n    price: {\n      type: null,\n      observer: 'updatePrice',\n    },\n    label: String,\n    loading: Boolean,\n    disabled: Boolean,\n    buttonText: String,\n    currency: {\n      type: String,\n      value: '짜',\n    },\n    buttonType: {\n      type: String,\n      value: 'danger',\n    },\n    decimalLength: {\n      type: Number,\n      value: 2,\n      observer: 'updatePrice',\n    },\n    suffixLabel: String,\n    safeAreaInsetBottom: {\n      type: Boolean,\n      value: true,\n    },\n  },\n\n  methods: {\n    updatePrice() {\n      const { price, decimalLength } = this.data;\n      const priceStrArr =\n        typeof price === 'number' &&\n        (price / 100).toFixed(decimalLength).split('.');\n      this.setData({\n        hasPrice: typeof price === 'number',\n        integerStr: priceStrArr && priceStrArr[0],\n        decimalStr: decimalLength && priceStrArr ? `.${priceStrArr[1]}` : '',\n      });\n    },\n\n    updateTip() {\n      this.setData({ hasTip: typeof this.data.tip === 'string' });\n    },\n\n    onSubmit(event: WechatMiniprogram.CustomEvent) {\n      this.$emit('submit', event.detail);\n    },\n  },\n})",
        "callee": "VantComponent",
        "arguments": [
          {
            "classes": [
              "'bar-class'",
              "'price-class'",
              "'button-class'"
            ],
            "props": {
              "tip": {
                "type": "null",
                "observer": "updateTip"
              },
              "tipIcon": "String",
              "type": "Number",
              "price": {
                "type": "null",
                "observer": "updatePrice"
              },
              "label": "String",
              "loading": "Boolean",
              "disabled": "Boolean",
              "buttonText": "String",
              "currency": {
                "type": "String",
                "value": "짜"
              },
              "buttonType": {
                "type": "String",
                "value": "danger"
              },
              "decimalLength": {
                "type": "Number",
                "value": "2",
                "observer": "updatePrice"
              },
              "suffixLabel": "String",
              "safeAreaInsetBottom": {
                "type": "Boolean",
                "value": "true"
              }
            },
            "methods": {
              "updatePrice": "updatePrice() {\n      const { price, decimalLength } = this.data;\n      const priceStrArr =\n        typeof price === 'number' &&\n        (price / 100).toFixed(decimalLength).split('.');\n      this.setData({\n        hasPrice: typeof price === 'number',\n        integerStr: priceStrArr && priceStrArr[0],\n        decimalStr: decimalLength && priceStrArr ? `.${priceStrArr[1]}` : '',\n      });\n    }",
              "updateTip": "updateTip() {\n      this.setData({ hasTip: typeof this.data.tip === 'string' });\n    }",
              "onSubmit": "onSubmit(event: WechatMiniprogram.CustomEvent) {\n      this.$emit('submit', event.detail);\n    }"
            }
          }
        ]
      }
    ]
  },
  "wxs": null,
  "wxss": ".van-submit-bar{background-color:var(--submit-bar-background-color,#fff);bottom:0;left:0;position:fixed;-webkit-user-select:none;user-select:none;width:100%;z-index:var(--submit-bar-z-index,100)}.van-submit-bar__tip{background-color:var(--submit-bar-tip-background-color,#fff7cc);color:var(--submit-bar-tip-color,#f56723);font-size:var(--submit-bar-tip-font-size,12px);line-height:var(--submit-bar-tip-line-height,1.5);padding:var(--submit-bar-tip-padding,10px)}.van-submit-bar__tip:empty{display:none}.van-submit-bar__tip-icon{margin-right:4px;vertical-align:middle}.van-submit-bar__tip-text{display:inline;vertical-align:middle}.van-submit-bar__bar{align-items:center;background-color:var(--submit-bar-background-color,#fff);display:flex;font-size:var(--submit-bar-text-font-size,14px);height:var(--submit-bar-height,50px);justify-content:flex-end;padding:var(--submit-bar-padding,0 16px)}.van-submit-bar__safe{height:constant(safe-area-inset-bottom);height:env(safe-area-inset-bottom)}.van-submit-bar__text{color:var(--submit-bar-text-color,#323233);flex:1;font-weight:var(--font-weight-bold,500);padding-right:var(--padding-sm,12px);text-align:right}.van-submit-bar__price{color:var(--submit-bar-price-color,#ee0a24);font-size:var(--submit-bar-price-font-size,12px);font-weight:var(--font-weight-bold,500)}.van-submit-bar__price-integer{font-family:Avenir-Heavy,PingFang SC,Helvetica Neue,Arial,sans-serif;font-size:20px}.van-submit-bar__currency{font-size:var(--submit-bar-currency-font-size,12px)}.van-submit-bar__suffix-label{margin-left:5px}.van-submit-bar__button{--button-default-height:var(--submit-bar-button-height,40px)!important;--button-line-height:var(--submit-bar-button-height,40px)!important;font-weight:var(--font-weight-bold,500);width:var(--submit-bar-button-width,110px)}"
}